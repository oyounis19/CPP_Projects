<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="Hospital" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="Debug">
				<Option output="bin/Debug/Hospital" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-g" />
				</Compiler>
			</Target>
			<Target title="Release">
				<Option output="bin/Release/Hospital" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
				</Compiler>
				<Linker>
					<Add option="-s" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
			<Add option="-fexceptions" />
		</Compiler>
		<Unit filename="main.cpp" />
		<Extensions>
			<lib_finder disable_auto="1" />
		</Extensions>
	</Project>
</CodeBlocks_project_file>

# depslib dependency file v1.0
1655420223 source:e:\programming\udemy c++ course\projects\hospital\main.cpp
	<iostream>
	<stdlib.h>


<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_layout_file>
	<FileVersion major="1" minor="0" />
	<ActiveTarget name="Debug" />
	<File name="main.cpp" open="1" top="1" tabpos="1" split="0" active="1" splitpos="0" zoom_1="-1" zoom_2="0">
		<Cursor>
			<Cursor1 position="196" topLine="0" />
		</Cursor>
		<Folding>
			<Collapse line="6" />
			<Collapse line="21" />
			<Collapse line="27" />
			<Collapse line="48" />
			<Collapse line="56" />
			<Collapse line="84" />
			<Collapse line="113" />
		</Folding>
	</File>
</CodeBlocks_layout_file>

#include <iostream>
#include <stdlib.h>
#define MAX_PATIENTS 1000
using namespace std;

struct patient
{
    string name;
    int spec;
    int status;
}n[MAX_PATIENTS];

int freq[21];

void system();
void coutmenu();
void add(int &pn);
void pp(int pn);
void gp(int &pn);

int main()
{
    system();
    return 0;
}

void system()
{
    int n, pn = -1;

    for(int l=0; l>-1; l++)
    {
        coutmenu();
        cin>>n;
        if(n == 1)
        {
            pn++;
            add(pn);
        }
        else if(n == 2)
            pp(pn);
        else if(n == 3)
            gp(pn);
        else if(n == 4)
            exit(0);
    }
}
void coutmenu()
{
    cout<<"Enter your choice:\n";
    cout<<"1) Add new patient\n";
    cout<<"2) Print all patients\n";
    cout<<"3) Get next patient\n";
    cout<<"4) Exit\n";
}
void add(int &pn)
{
    int spec, stat;
    string name;
    cout<<"Enter specialization, name, status: ";
    cin>>spec>>name>>stat;
    if(freq[spec] == 5){
        cout<<"sorry we can't add more patients to specialization\n\n";
        pn--;
        return;
    }
        n[pn].spec = spec;
        n[pn].status = stat;
        n[pn].name = name;

    freq[n[pn].spec]++;
    if(n[pn].status == 1)
    {
        for(int i=pn-1; i>=0; i--)
            n[i+1] = n[i];

        n[0].spec = spec;
        n[0].name = name;
        n[0].status = stat;
    }
    cout<<endl;
}

void pp(int pn)
{
    cout<<"\t\t\t\t*************************************************\n";
    if(pn == -1)
    {
        cout<<"No patients at the moment\n\n";
        return;
    }
    for(int i=0; i<21; i++)
    {
        if(freq[i] != 0)
        {
            cout<<"There are "<<freq[i]<<" patients in specialization "<<i<<endl;
            for(int j=0; j<=pn; j++)
            {
                if(n[j].spec == i)
                {
                    cout<<n[j].name;
                    if(n[j].status == 0)
                        cout<<" regular\n";
                    else
                        cout<<" urgent\n";
                }
            }
        }
    }
    cout<<"\n\n";
}

void gp(int &pn)
{
    if(pn == -1)
    {
        cout<<"No patients at the moment, Dr\n\n";
        return;
    }
    int x;
    cout<<"Enter specialization: ";
    cin>>x;
    for(int i=0; i<=pn; i++)
    {
        if(n[i].spec == x)
        {
            cout<<n[i].name<<" please go with the Dr\n\n";
            freq[n[i].spec]--;
            for(int j=i; j<=pn; j++)
                n[j] = n[j+1];

            pn--;
            return;
        }
    }
    cout<<"No patients at the moment. Have a rest, Dr\n\n";
}
